inputs_def:
  - handle: pdf
    description: Scanned PDF file to be analysed
    json_schema:
      type: string
      ui:widget: file
      ui:options:
        filters:
          - name: PDF
            extensions:
              - pdf
    nullable: false
  - handle: output_dir
    description: EPUB file save path, if not filled in, a default path will be specified
    json_schema:
      type: string
      ui:widget: dir
    value:
    nullable: true
  - group: OCR
    collapsed: true
  - handle: device
    description: how to perform OCR, using CPU? using CUDA hardware acceleration? or
      uploading to the cloud?
    json_schema:
      enum:
        - cpu
        - cuda
        - cloud
      ui:options:
        labels:
          - CPU
          - CUDA
          - Cloud
    value: cloud
    nullable: false
  - handle: ocr_level
    description: Should we perform OCR only once per page, or perform OCR multiple
      times to avoid missing some text?
    json_schema:
      enum:
        - once
        - once_per_layout
      ui:options:
        labels:
          - Once
          - Once per Layout
    value: once
    nullable: false
  - group: LLM
    collapsed: true
  - handle: window_tokens
    description: The entire book will be split into many segments and submitted to
      LLM in batches. this number is used to limit the number of tokens in each
      segment.
    json_schema:
      type: integer
    value:
    nullable: true
  - handle: threads_count
    description: The number of threads opened at the same time to initiate requests
      to LLM, the more threads, the faster the analysis speed.
    json_schema:
      type: integer
      minimum: 1
    value: 4
  - handle: retry_times
    description: The number of retries after an LLM request fails is limited. If a
      request exceeds this number, an error will be reported and the request
      will be exited.
    json_schema:
      type: integer
      minimum: 0
    value: 5
    nullable: false
  - handle: retry_interval_seconds
    description: How long (in seconds) after a failed LLM request starts the next retry
    json_schema:
      type: number
      minimum: 0
    value: 1.5
    nullable: false
  - group: options
    collapsed: true
  - handle: correction
    description: For the results of OCR scanning, LLM is used to correct the text.
      If set to "off", no correction will be made; if set to "once", only one
      correction will be made; if set to "detailed", the correction will be
      repeated until LLM considers the final result to be of sufficient quality.
    json_schema:
      enum:
        - off
        - once
        - detailed
      ui:options:
        labels:
          - Off
          - Once
          - Detailed
    value: once
  - handle: extract_formula
    description: Whether to extract formulas in the page. If enabled, the formulas
      will be parsed into LATEX format. If disabled, the formulas will be
      treated as static images.
    json_schema:
      type: boolean
    value: false
  - handle: extract_table
    description: Whether to extract the table in the page. If enabled, it will be
      recognized as HTML format, if disabled, it will be displayed as a static
      image.
    json_schema:
      type: boolean
    value: false
  - handle: llm
    json_schema:
      ui:options:
        title: Model
        tags:
          - text
        excludeTags:
          - thinking
      ui:widget: llm::model
    value:
      model: deepseek-chat
      temperature: 1
      top_p: 0.6
      max_tokens: 8192
outputs_def:
  - handle: output_dir
    description: A folder is created to store files representing the results of
      analyzing the PDF.
    json_schema:
      type: string
      ui:widget: dir
ui:
  default_width: 446.4504227920147
executor:
  name: python
  options:
    spawn: false
    entry: __init__.py
title: Analyse PDF
icon: ":fa6-solid:file-pdf:#F14C4C:"
description: Analyse the scanned PDF file, use OCR to recognize the content of
  the book page, and use LLM to analyze the book structure and extract the
  necessary information.
